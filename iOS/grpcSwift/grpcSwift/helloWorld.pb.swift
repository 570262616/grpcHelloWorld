/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: helloWorld.proto
 *
 */

///  这里使用proto3的语法规则

import Foundation
import SwiftProtobuf


///   客户端传的名字
struct Helloworld_HelloRequest: ProtobufGeneratedMessage, ProtobufProto3Message {
  public var swiftClassName: String {return "Helloworld_HelloRequest"}
  public var protoMessageName: String {return "HelloRequest"}
  public var protoPackageName: String {return "helloworld"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
  ]}


  public var name: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
  }

  public func _protoc_generated_isEqualTo(other: Helloworld_HelloRequest) -> Bool {
    if name != other.name {return false}
    return true
  }
}

///   服务端返回的消息
struct Helloworld_HelloReply: ProtobufGeneratedMessage, ProtobufProto3Message {
  public var swiftClassName: String {return "Helloworld_HelloReply"}
  public var protoMessageName: String {return "HelloReply"}
  public var protoPackageName: String {return "helloworld"}
  public var jsonFieldNames: [String: Int] {return [
    "message": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "message": 1,
  ]}


  public var message: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws {
    switch protoFieldNumber {
    case 1: try setter.decodeSingularField(fieldType: ProtobufString.self, value: &message)
    default: break
    }
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if message != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: message, protoFieldNumber: 1, protoFieldName: "message", jsonFieldName: "message", swiftFieldName: "message")
    }
  }

  public func _protoc_generated_isEqualTo(other: Helloworld_HelloReply) -> Bool {
    if message != other.message {return false}
    return true
  }
}
